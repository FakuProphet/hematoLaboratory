<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABcXFw6W1tbo1xcXKpcXFyqXFxcqlxcXKpcXFyqXFxcqlxc
        XKpcXFyqXFxcqlxcXKpcXFyqXFxcqlxcXKpcXFyqXFxcqlxcXKpcXFyqXFxcqlxcXKpcXFyqW1tbo1lZ
        WTkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXV1dC1tbW/BbW1u4XFxcmVxcXJlcXFyZXFxcmVxc
        XJlcXFyZXFxcmVxcXJlcXFyZXFxcmVxcXJlcXFyZXFxcmVxcXJlcXFyZXFxcmVxcXJlcXFyZXFxcmVxc
        XJlaWlq6W1tb71VVVQkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABZWVkoW1tb/1hYWCBgYGAYXV1dKV1d
        XSldXV0pXV1dKV1dXSldXV0pXV1dKV1dXSldXV0pXV1dKV1dXSldXV0pXV1dKV1dXSldXV0pXV1dKV1d
        XSldXV0pYGBgGFhYWCBbW1v/WVlZKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAF1dXSlbW1v/WlpaH1tb
        W5pbW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1uaWlpaH1tbW/9dXV0pAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXV1dKVtb
        W/9aWlofW1tbmltbW7daWlofWlpaH1paWh9aWlofWlpaH1paWh9aWlofWlpaH1paWh9aWlofWlpaH1pa
        Wh9aWlofWlpaH1paWh9aWlofW1tbt1tbW5paWlofW1tb/11dXSkAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        /y/0AAAv9g/wb/fv9+/wD/Af/+AH//////8=
</value>
  </data>
</root>